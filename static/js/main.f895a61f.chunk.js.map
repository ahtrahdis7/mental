{"version":3,"sources":["logo.svg","Home.js","App.js","reportWebVitals.js","index.js"],"names":["quote_style","position","margin","padding","borderRadius","opacity","backgroundColor","top","Math","floor","random","left","text_style","width","height","div_style","x","y","Home","useState","query","setQuery","quotes","quote","setQuote","pics","setPics","debouncedSave","useCallback","debounce","nextValue","fetchQuery","num","console","log","fetch","then","response","ok","error","Error","status","statusText","message","res","json","results","length","urls","raw","style","TextField","onChange","event","target","value","id","variant","textAlign","text","author","src","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0w3LAAe,I,4DC+Ef,IAAMA,EAAc,CAChBC,SAAU,WACVC,OAAQ,GACRC,QAAS,GACTC,aAAc,GACdC,QAAS,GACTC,gBAAiB,QACjBC,IAAI,GAAD,OAAKC,KAAKC,MAAuB,GAAhBD,KAAKE,SAAiB,GAAvC,KACHC,KAAK,GAAD,OAAKH,KAAKC,MAAuB,GAAhBD,KAAKE,SAAiB,GAAvC,MAIFE,GAAU,GACZP,QAAS,GACTQ,MAAO,OACPC,OAAQ,MACRR,gBAAiB,SAJL,wBAKH,IALG,6BAME,GANF,GASVS,EAAY,CACdd,SAAU,WACVC,OAAQ,GACRC,QAAS,GACTC,aAAc,GACdY,EAAG,MACHC,EAAG,MAIHZ,QAAS,IAGEa,EA5Gf,WACI,MAA0BC,mBAAS,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAASG,EAAOd,KAAKC,MAAuB,IAAhBD,KAAKE,SAAmB,KAA9E,mBAAOa,EAAP,KAAcC,EAAd,KACA,EAAwBL,mBAAS,mJAAjC,mBAAOM,EAAP,KAAaC,EAAb,KAEMC,EAAgBC,sBACxBC,KAAS,SAAAC,GAAS,OAAIC,EAAWD,KAAY,KAC7C,IAYME,EAAM,EACJD,EAAa,SAASX,GAErBY,EAAM,IAAKA,GAAY,IACrBA,IAELC,QAAQC,IAAId,EAAOY,GACnBG,MAAM,+CAAD,OAAgDH,EAAhD,6BAAwEZ,EAAxE,2DACJgB,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAEZ,SAAAA,GAEE,MADc,IAAIC,MAAMD,EAAMI,YAGjCP,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,UAChBT,MAAK,SAAAQ,GACCA,EAAIE,QAAQC,OAAS,GAAGrB,EAAQkB,EAAIE,QAAQ,GAAGE,KAAKC,QAG3DzB,EAASF,EAAOd,KAAKC,MAAuB,IAAhBD,KAAKE,SAAmB,MAKxD,OACI,gCACI,qBAAKwC,MAAOnC,EAAZ,SACI,cAACoC,EAAA,EAAD,CACAC,SA3CS,SAACC,GAClB,IAAevB,EAAcuB,EAAMC,OAA3BC,MACRlC,EAASS,GAGfH,EAAcG,IAuCAoB,MAAOtC,EACP2C,MAAOnC,EAAOoC,GAAG,iBACjBC,QAAQ,WAAWvD,OAAO,YAE9B,sBAAKgD,MAAOlD,EAAZ,UACI,mBAAGkD,MAAO,CACNQ,UAAW,UADf,SAEInC,EAAMoC,OACV,mCAAMpC,EAAMqC,aAEhB,8BACI,qBAAKC,IAAKpC,EAAMyB,MAAO,CACnBrC,MAAO,OACPC,OAAQ,gBC5DbgD,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f895a61f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useCallback } from 'react'\nimport { Box, TextField } from '@material-ui/core';\nimport debounce from 'lodash.debounce';\nimport quotes from './quotes.json';\n\nfunction Home(){\n    const [query, setQuery] = useState(\"calm\");\n    const [quote, setQuote] = useState(quotes[Math.floor((Math.random() * 1000) + 1)]);\n    const [pics, setPics] = useState(\"https://images.unsplash.com/photo-1518241353330-0f7941c2d9b5?ixid=MnwyNDUwMzh8MHwxfHNlYXJjaHwzfHxjYWxtfGVufDB8fHx8MTYyNTY3ODQ5MA&ixlib=rb-1.2.1\");\n    // var number = 1;\n    const debouncedSave = useCallback(\n\t\tdebounce(nextValue => fetchQuery(nextValue), 1000),\n\t\t[], // will be created only once initially\n\t);\n\n    const handleChange = (event) => {\n        const { value: nextValue } = event.target;\n        setQuery(nextValue);\n        // Even though handleChange is created on each render and executed\n\t\t// it references the same debouncedSave that was created initially\n\t\tdebouncedSave(nextValue);\n        // fetchQuery(query, number);\n        \n    };\n    let num = 0;\n    const fetchQuery = function(query){\n        \n        if(num > 100) num = num % 100;\n        else num++;\n\n        console.log(query, num)\n        fetch(`https://api.unsplash.com/search/photos?page=${num}&per_page=1&query=${query}&client_id=dI5dfzVEG3qziDy_Acn1ui9QT77i2tCWAoPgoldB0-Y`)\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.results.length > 0) setPics(res.results[0].urls.raw)\n        })\n\n        setQuote(quotes[Math.floor((Math.random() * 1000) + 1)])\n\n    }\n    // fetchQuery(query);\n    // console.log(quotes[0])\n    return (\n        <div>\n            <div style={div_style}>\n                <TextField \n                onChange={handleChange} \n                style={text_style} \n                value={query} id=\"outlined-basic\" \n                variant=\"outlined\" margin=\"dense\"/>\n            </div>\n            <div style={quote_style}>\n                <p style={{\n                    textAlign: 'center'\n                }}>{quote.text}</p>\n                <p>- {quote.author}</p>\n            </div>\n            <div>\n                <img src={pics} style={{\n                    width: '100%',\n                    height: '100%',\n                }}/>\n            </div>\n        </div>\n    )\n}\n\nconst quote_style = {\n    position: 'absolute',\n    margin: 20,\n    padding: 20,\n    borderRadius: 20,\n    opacity: 0.5,\n    backgroundColor: 'white',\n    top: `${Math.floor((Math.random() * 70) + 1)}%`,\n    left: `${Math.floor((Math.random() * 70) + 1)}%`,\n    // transform: translate('-50%', '-50%'),\n}\n\nconst text_style = {\n    opacity: 0.8,\n    width: '25ch',\n    height: '1cm',\n    backgroundColor: 'white',\n    opacity: 0.5,\n    borderRadius: 5\n}\n\nconst div_style = {\n    position: 'absolute',\n    margin: 20,\n    padding: 20,\n    borderRadius: 20,\n    x: '50%',\n    y: '50%',\n    // width: 250,\n    // height: 100,\n    // backgroundColor: '#fafafa',\n    opacity: 0.5,\n}\n\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}